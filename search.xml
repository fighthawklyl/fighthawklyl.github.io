<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>管脚复用</title>
      <link href="/2021/07/15/guan-jiao-jie-fu-yong/"/>
      <url>/2021/07/15/guan-jiao-jie-fu-yong/</url>
      
        <content type="html"><![CDATA[<h3 id="管脚复用"><a href="#管脚复用" class="headerlink" title="管脚复用"></a>管脚复用</h3><p>管脚复用指一个引脚具有多种功能，可以在不同时刻使用不同的功能(时分复用)，需要通过配置寄存器来开关芯片外部引脚和内部引脚的连接。</p><span id="more"></span><h4 id="引脚内部情况"><a href="#引脚内部情况" class="headerlink" title="引脚内部情况"></a>引脚内部情况</h4><p><img "" class="lazyload placeholder" data-original="/photo/gpio/7.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"></p><table>    <tr>        <td>引脚</td>         <td>寄存器值</td>        <td>引脚功能</td>   </tr>    <tr>        <td rowspan="3">PA1</td>            <td >0x00</td>         <td >GPIO</td>      </tr>    <tr>        <td >0x01</td>        <td >UART_RX</td>        </tr>        <tr>        <td >0x10</td>        <td >PWM</td>        </tr></table><h4 id="设置GPIO模式"><a href="#设置GPIO模式" class="headerlink" title="设置GPIO模式"></a>设置GPIO模式</h4><p>若要将PA1设置成GPIO模式<br>首先，需要查询手册找到PA1的寄存器地址，设地址为<font color='red'> 0x120F0218 </font><br>上表中的类似数据也可以在手册查找，GPIO功能寄存器要设置为0x00。可以直接设置该地址值为0x00。</p><p>有些芯片手册不会直接告诉该引脚的寄存器地址，会告诉你寄存器基地址，这时候要更具手册告诉的<font color='red'>基地址+偏移</font>去设置寄存器<br><img "" class="lazyload placeholder" data-original="/photo/gpio/8.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br><img "" class="lazyload placeholder" data-original="/photo/gpio/9.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>可以看到寄存器基地址为<font color='red'> 0xFE030000 </font>，上图中的引脚要设置为GPIO_0_0使用，就要设置<font color='red'> 0xFE030000 + 0x20基地址偏移后地址上的值 </font>，图中 2..0 是表示该地址下第第0位到第2位，这三位上的数据表示该引脚的复用模式。<br>但是不能直接往<font color='red'> 0xFE030020 </font>地址设置0x0,这样设置会把其他位的值全部置0.<br>因此，先读取<font color='red'> 0xFE030020 </font>地址上的值，假设读出来的值是 0x26fea113。<br>我门要设置的是前面3位设置为0，第0位到第2位占了3位，要将其置0。111B = 0x7,在第0位开始，所以左移 0 位， (0x7 &lt;&lt; 0)。取反~(0x7)即其他位都为1，低3位变0，11111…..111000B。和0x26fea113 进行&amp;运算，就仅仅只会改变低三位的值。<br>0x26fea113 = 00100110111111101010000100010011B</p><pre class="line-numbers language-C" data-language="C"><code class="language-C">unsigned int val &#x3D; 0x26fea113;val &amp;&#x3D; ~(0x7 &lt;&lt; 0)；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>得到 val =  0x26fea110<br>将0x26fea110写入寄存器就完成了设置该引脚复用为GPIO_0_0。</p><h4 id="设置X-I2S2-MCLK"><a href="#设置X-I2S2-MCLK" class="headerlink" title="设置X_I2S2_MCLK"></a>设置X_I2S2_MCLK</h4><p>那设置成X_I2S2_MCLK怎么设置呢？<br>设置该复用模式，需要将这寄存器上这三位设置为0x3 = 011B<br>分步来</p><pre class="line-numbers language-C" data-language="C"><code class="language-C">unsigned int val &#x3D; 0x26fea113;&#x2F;&#x2F;将第三位置0，val &amp;&#x3D; ~(0x1 &lt;&lt; 3);&#x2F;&#x2F;val &#x3D; 0010 0110 1111 1110 1010 0001 0001 0011 &amp; 1111 1111 1111 1111 1111 1111 1111 1011&#x2F;&#x2F;将第一位第二位置1val |&#x3D; 0x3 &lt;&lt; 0;&#x2F;&#x2F;val &#x3D; 00100110111111101010000100010011 | 0x11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>此时得到的val = 0x26fea113;<br>将0x26fea113写入寄存器就完成了设置该引脚复用为X_I2S2_MCLK。</p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 嵌入式 </tag>
            
            <tag> Gpio </tag>
            
            <tag> 管脚复用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux用户态设置gpio</title>
      <link href="/2021/07/12/linux-yong-hu-tai-she-zhi-gpio/"/>
      <url>/2021/07/12/linux-yong-hu-tai-she-zhi-gpio/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux用户态设置GPIO"><a href="#Linux用户态设置GPIO" class="headerlink" title="Linux用户态设置GPIO"></a>Linux用户态设置GPIO</h2><p>当单独排查或调试某个引脚相关硬件时，如果直接运行app程序，通过代码修改一次运行一次会比较麻烦。<br>这个时候应当单独对该引脚调试，也可避免程序中可能存在未知的地方修改引脚。</p><span id="more"></span><h3 id="一、GPIO操作相关目录以及接口"><a href="#一、GPIO操作相关目录以及接口" class="headerlink" title="一、GPIO操作相关目录以及接口"></a>一、GPIO操作相关目录以及接口</h3><h4 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h4><p>/sys/class/gpio/</p><h4 id="export"><a href="#export" class="headerlink" title="export"></a>export</h4><p>用于导出指定编号的引脚，用为GPIO直接使用</p><h4 id="unexport"><a href="#unexport" class="headerlink" title="unexport"></a>unexport</h4><p>删除导出的GPIO</p><h3 id="二、GPIO使用"><a href="#二、GPIO使用" class="headerlink" title="二、GPIO使用"></a>二、GPIO使用</h3><h4 id="进入-sys-class-gpio-目录"><a href="#进入-sys-class-gpio-目录" class="headerlink" title="进入/sys/class/gpio/目录"></a>进入/sys/class/gpio/目录</h4><p>终端输入:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /sys/class/gpio/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="/photo/gpio/1.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"></p><h4 id="添加GPIO"><a href="#添加GPIO" class="headerlink" title="添加GPIO"></a>添加GPIO</h4><p>终端输入: </p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token number">30</span> <span class="token operator">></span> <span class="token builtin class-name">export</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="/photo/gpio/2.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"></p><p>可以发现目录下出现了一个gpio30，这就代表添加gpio成功了。如果执行后没有添加上，没反应或提示不能添加，表示该gpio已经被作为其他功能使用。</p><h4 id="操作GPIO"><a href="#操作GPIO" class="headerlink" title="操作GPIO"></a>操作GPIO</h4><p>终端输入:</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> gpio30<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="/photo/gpio/3.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"></p><p>使用ls命令可以查看到进去后目录下的几个文件如上图。</p><h5 id="direction"><a href="#direction" class="headerlink" title="direction"></a>direction</h5><p>设置引脚输出输入方向<br>1、设置输入</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token keyword">in</span> <span class="token operator">></span> direction<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="/photo/gpio/4.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>检查是否设置成功</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cat</span> direction<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img "" class="lazyload placeholder" data-original="/photo/gpio/5.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>显示为in，则设置输入方向成功</p><p>2、设置输出</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> out <span class="token operator">></span> direction<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>检查是否成功同上</p><h5 id="value"><a href="#value" class="headerlink" title="value"></a>value</h5><p>1、设置高电平</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token number">1</span> <span class="token operator">></span> value<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><font color='red'> 注意 </font> :该设置操作必须要上面输出输入设置为输出才能设置</p><p><img "" class="lazyload placeholder" data-original="/photo/gpio/6.png" src="https://img10.360buyimg.com/ddimg/jfs/t1/157667/29/9156/134350/603c6445Ebbc9cabe/41219c5d36d45072.gif"><br>如图，查询得知原来为低电平，value为0，设置后查询得知为1.设置成功。</p><p>2、设置低电平</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token number">0</span> <span class="token operator">></span> value<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><div class="note info"><p>当上述操作后如果，设置高电平应当是3.3V，测量电压却远低于3.3V，这个时候就需要直接操作寄存器来查看管脚复用情况，确认是否正确解复用为gpio模式</p></div><p>👇👇👇👇👇<br><a href="">管脚复用</a><br><a href="">读写寄存器</a></p>]]></content>
      
      
      <categories>
          
          <category> 嵌入式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 嵌入式 </tag>
            
            <tag> Gpio </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
